generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Recipe {
  id          String   @id @default(uuid())
  imageUrl    String?
  title       String   @unique
  description String
  servings    Int
  cookingTime Int
  prepTime    Int
  slug        String
  uploadedOn  DateTime @default(now())
  updatedOn   DateTime @updatedAt
  uploaderId  String?

  uploader     User?         @relation(references: [id], fields: [uploaderId], onDelete: Cascade)
  ingredients  Ingredient[]
  instructions Instruction[]
}

model Ingredient {
  id         Int    @id @default(autoincrement())
  ingredient String

  recipe   Recipe @relation(references: [id], fields: [recipeId], onDelete: Cascade)
  recipeId String
}

model Instruction {
  id          Int    @id @default(autoincrement())
  step        Int
  instruction String

  recipe   Recipe @relation(references: [id], fields: [recipeId], onDelete: Cascade)
  recipeId String
}

model User {
  id            String   @id @default(uuid())
  image         String?
  firstName     String
  lastName      String
  email         String   @unique
  emailVerified Boolean  @default(false)
  password      String
  dateJoined    DateTime @default(now())

  sessions              Session[]
  emailVerificationCode EmailVerificationCode[]
  recipes               Recipe[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model EmailVerificationCode {
  id        String   @id @default(uuid())
  code      String
  email     String
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}
